#############################################################################
# Makefile for building: yukon
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Sat Jul 18 00:39:32 2009
# Project:  yukon.pro
# Template: app
# Command: $(QMAKE) -o Makefile yukon.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -g -Wall -W -O0 -D_REENTRANT  -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_NO_DEBUG
CXXFLAGS = -pipe -g -Wall -W -O0 -D_REENTRANT  -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I. -Iengine -I/usr/include/qt3
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/share/qt3/lib -L/usr/X11R6/lib -lsfml-audio -lsfml-graphics -lsfml-window -lsfml-system -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = Y_Game.h \
		Y_Level.h \
		Y_Perso.h \
		Y_Wolf.h \
		Y_Fire.h \
		engine/Actor.h \
		engine/Anim_Sprite.h \
		engine/Animation.h \
		engine/Camera.h \
		engine/Game.h \
		engine/Ground_Plane.h \
		engine/Level.h \
		engine/Particle.h \
		engine/Particle_Src.h \
		engine/Phys_Object.h
SOURCES = yukon.cpp \
		Y_Game.cpp \
		Y_Level.cpp \
		Y_Perso.cpp \
		Y_Wolf.cpp \
		Y_Fire.cpp \
		engine/Actor.cpp \
		engine/Anim_Sprite.cpp \
		engine/Animation.cpp \
		engine/Camera.cpp \
		engine/Game.cpp \
		engine/Ground_Plane.cpp \
		engine/Level.cpp \
		engine/Particle.cpp \
		engine/Particle_Src.cpp \
		engine/Phys_Object.cpp
OBJECTS = yukon.o \
		Y_Game.o \
		Y_Level.o \
		Y_Perso.o \
		Y_Wolf.o \
		Y_Fire.o \
		Actor.o \
		Anim_Sprite.o \
		Animation.o \
		Camera.o \
		Game.o \
		Ground_Plane.o \
		Level.o \
		Particle.o \
		Particle_Src.o \
		Phys_Object.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = yukon.pro
QMAKE_TARGET = yukon
DESTDIR  = 
TARGET   = yukon

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: yukon.pro  /usr/share/qt3/mkspecs/default/qmake.conf /usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile yukon.pro
qmake: 
	@$(QMAKE) -o Makefile yukon.pro

dist: 
	@mkdir -p .tmp/yukon && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/yukon/ && ( cd `dirname .tmp/yukon` && $(TAR) yukon.tar yukon && $(GZIP) yukon.tar ) && $(MOVE) `dirname .tmp/yukon`/yukon.tar.gz . && $(DEL_FILE) -r .tmp/yukon

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

yukon.o: yukon.cpp Y_Game.h \
		engine/Game.h \
		Y_Level.h \
		Y_Perso.h \
		Y_Wolf.h \
		Y_Fire.h \
		engine/Camera.h \
		engine/Level.h \
		engine/Phys_Object.h \
		engine/Particle.h \
		engine/Particle_Src.h \
		engine/Anim_Sprite.h \
		engine/Animation.h \
		engine/Ground_Plane.h \
		engine/Actor.h

Y_Game.o: Y_Game.cpp Y_Game.h \
		engine/Game.h \
		Y_Level.h \
		Y_Perso.h \
		Y_Wolf.h \
		Y_Fire.h \
		engine/Camera.h \
		engine/Level.h \
		engine/Phys_Object.h \
		engine/Particle.h \
		engine/Particle_Src.h \
		engine/Anim_Sprite.h \
		engine/Animation.h \
		engine/Ground_Plane.h \
		engine/Actor.h

Y_Level.o: Y_Level.cpp Y_Level.h \
		engine/Level.h \
		engine/Camera.h \
		engine/Ground_Plane.h \
		engine/Phys_Object.h \
		engine/Particle.h \
		engine/Particle_Src.h \
		engine/Anim_Sprite.h \
		engine/Animation.h

Y_Perso.o: Y_Perso.cpp Y_Perso.h \
		engine/Actor.h \
		Y_Fire.h \
		engine/Phys_Object.h \
		engine/Anim_Sprite.h \
		engine/Animation.h

Y_Wolf.o: Y_Wolf.cpp Y_Wolf.h \
		engine/Actor.h \
		Y_Perso.h \
		Y_Fire.h \
		engine/Phys_Object.h \
		engine/Anim_Sprite.h \
		engine/Animation.h

Y_Fire.o: Y_Fire.cpp Y_Fire.h \
		engine/Anim_Sprite.h \
		engine/Animation.h

Actor.o: engine/Actor.cpp engine/Actor.h \
		engine/Phys_Object.h \
		engine/Anim_Sprite.h \
		engine/Animation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Actor.o engine/Actor.cpp

Anim_Sprite.o: engine/Anim_Sprite.cpp engine/Anim_Sprite.h \
		engine/Animation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Anim_Sprite.o engine/Anim_Sprite.cpp

Animation.o: engine/Animation.cpp engine/Animation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Animation.o engine/Animation.cpp

Camera.o: engine/Camera.cpp engine/Camera.h \
		engine/Anim_Sprite.h \
		engine/Phys_Object.h \
		engine/Animation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Camera.o engine/Camera.cpp

Game.o: engine/Game.cpp engine/Game.h \
		engine/Camera.h \
		engine/Level.h \
		engine/Phys_Object.h \
		engine/Particle.h \
		engine/Particle_Src.h \
		engine/Anim_Sprite.h \
		engine/Animation.h \
		engine/Ground_Plane.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Game.o engine/Game.cpp

Ground_Plane.o: engine/Ground_Plane.cpp engine/Ground_Plane.h \
		engine/Camera.h \
		engine/Anim_Sprite.h \
		engine/Phys_Object.h \
		engine/Animation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Ground_Plane.o engine/Ground_Plane.cpp

Level.o: engine/Level.cpp engine/Level.h \
		engine/Camera.h \
		engine/Ground_Plane.h \
		engine/Phys_Object.h \
		engine/Particle.h \
		engine/Particle_Src.h \
		engine/Anim_Sprite.h \
		engine/Animation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Level.o engine/Level.cpp

Particle.o: engine/Particle.cpp engine/Particle.h \
		engine/Animation.h \
		engine/Phys_Object.h \
		engine/Anim_Sprite.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Particle.o engine/Particle.cpp

Particle_Src.o: engine/Particle_Src.cpp engine/Particle_Src.h \
		engine/Phys_Object.h \
		engine/Particle.h \
		engine/Anim_Sprite.h \
		engine/Animation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Particle_Src.o engine/Particle_Src.cpp

Phys_Object.o: engine/Phys_Object.cpp engine/Phys_Object.h \
		engine/Anim_Sprite.h \
		engine/Animation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Phys_Object.o engine/Phys_Object.cpp

####### Install

install:  

uninstall:  

